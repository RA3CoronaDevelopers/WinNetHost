<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFramework>net5.0</TargetFramework>
	</PropertyGroup>

	<!-- This is to hide all the source files in VS to make the project cleaner,
       but also to include them in the build so that when the source is modified the build will rerun the C++ compiler. -->
	<ItemGroup>
		<Content Include="*.*">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
			<Visible>false</Visible>
		</Content>
		<Content Include="inc/*.*">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
			<Visible>false</Visible>
		</Content>
		<Content Include="inc.vs/*.*">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
			<Visible>false</Visible>
		</Content>
	</ItemGroup>

	<PropertyGroup>
		<NativeBinDir>$(BinRoot)/$(Configuration)</NativeBinDir>
		<NativeOutputName>nativehost</NativeOutputName>

		<NativePlatform>$([System.Runtime.InteropServices.RuntimeInformation]::ProcessArchitecture)</NativePlatform>
		<NativeObjDir>$(MSBuildThisFileDirectory)obj/$(Configuration)/$(NativePlatform)/</NativeObjDir>
		<NativeHostDirectory>$(MSBuildThisFileDirectory)</NativeHostDirectory>
		<PlatformTarget>x86</PlatformTarget>
	</PropertyGroup>

	<!-- Properties for MSVCFindCompilerPaths -->
	<PropertyGroup Condition="$([MSBuild]::IsOsPlatform('Windows'))">
		<MSVCPlatform>x64</MSVCPlatform>
		<MSVCPlatform Condition="$(NETCoreSDKRuntimeIdentifier.Contains('x86'))">x86</MSVCPlatform>
	</PropertyGroup>

	<ItemGroup>
		<NativeSource Include="nativehost.cpp" />
		<Clean Include="$(NativeBinDir)/$(NativeOutputName).*" />
		<Clean Include="$(NativeObjDir)/*.*" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="CompilerPaths" Version="[1.0.2, )" Condition="$([MSBuild]::IsOsPlatform('Windows'))" />
	</ItemGroup>

	<!-- Targets to build the native project. The output goes directly to the bin directory -->
	<Target Name="PrepareForNativeBuild">
		<PropertyGroup>
			<NativeOutputExtension Condition="$([MSBuild]::IsOsPlatform('Windows'))">.exe</NativeOutputExtension>
			<NativeOutputFilePath>$(NativeBinDir)/$(NativeOutputName)$(NativeOutputExtension)</NativeOutputFilePath>

			<SourceFiles>@(NativeSource-> '"%(RootDir)%(Directory)%(Filename)%(Extension)"', ' ')</SourceFiles>

			<NetHostDir>$(NetCoreTargetingPackRoot)/Microsoft.NETCore.App.Host.$(NETCoreSdkRuntimeIdentifier)/$(BundledNETCoreAppPackageVersion)/runtimes/$(NETCoreSdkRuntimeIdentifier)/native</NetHostDir>

			<NetHostName Condition="$([MSBuild]::IsOsPlatform('Windows'))">nethost.dll</NetHostName>
			<NetHostName Condition="$([MSBuild]::IsOsPlatform('Linux'))">libnethost.so</NetHostName>
			<NetHostName Condition="$([MSBuild]::IsOsPlatform('OSX'))">libnethost.dylib</NetHostName>
		</PropertyGroup>

		<MakeDir Directories="$(NativeBinDir)" />
		<MakeDir Directories="$(NativeObjDir)" />
	</Target>

	<Target Name="BuildNativeProjectWindows" AfterTargets="Build" DependsOnTargets="PrepareForNativeBuild;MSVCFindCompilerPaths" Condition="$([MSBuild]::IsOsPlatform('Windows'))">
		<PropertyGroup>
			<IncPaths>@(MSVCIncludePaths-> '/I "%(RootDir)%(Directory)%(Filename)"', ' ')</IncPaths>
			<IncPaths>$(IncPaths) /I inc /I "$(NetHostDir)"</IncPaths>
			<CompilerArgs>/EHsc /Od /GS /sdl /Zi</CompilerArgs>
			<PreprocessorDefines>/D WINDOWS</PreprocessorDefines>
			<LibPaths>@(MSVCLibPaths-> '/LIBPATH:"%(RootDir)%(Directory)%(Filename)"', ' ')</LibPaths>
			<LibPaths>$(LibPaths) "$(NetHostDir)\nethost.lib"</LibPaths>
		</PropertyGroup>

		<Exec Command="&quot;$(MSVCCompilerPath)&quot; $(SourceFiles) $(IncPaths) $(PreprocessorDefines) $(CompilerArgs) /link $(LibPaths) /out:&quot;$(NativeOutputFilePath)&quot;" WorkingDirectory="$(NativeObjDir)" ConsoleToMsBuild="true" />

		<Copy SourceFiles="$(NetHostDir)/$(NetHostName)" DestinationFolder="$(NativeBinDir)" SkipUnchangedFiles="True" />
	</Target>
</Project>
